/*
 * EmergentMUD - A modern MUD with a procedurally generated world.
 * Copyright (C) 2016-2017 Peter Keeler
 *
 * This file is part of EmergentMUD.
 *
 * EmergentMUD is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * EmergentMUD is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

group 'com.emergentmud'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'
apply plugin: 'info.solidsoft.pitest'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'org.kordamp.gradle.stats'

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.9.RELEASE'
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.9'
        classpath 'org.owasp:dependency-check-gradle:1.4.5'
        classpath 'org.kordamp.gradle:stats-gradle-plugin:0.2.2'
    }
}

repositories {
    mavenCentral()
}

configurations.compile {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
}

dependencies {
    compile 'javax.inject:javax.inject:1'
    compile 'joda-time:joda-time:2.9.3'
    compile 'ch.qos.logback:logback-classic:1.2.3'

    compile 'org.webjars:webjars-locator:0.30'
    compile 'org.webjars:jquery:2.1.1'
    compile 'org.webjars:bootstrap:3.2.0'
    compile 'org.webjars:font-awesome:4.5.0'

    compile 'org.postgresql:postgresql:42.2.1'
    compile 'org.flywaydb:flyway-core:5.0.7'

    compile 'org.springframework.boot:spring-boot-starter:1.5.9.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-web:1.5.9.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-jetty:1.5.9.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-freemarker:1.5.9.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-websocket:1.5.9.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-security:1.5.9.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa:1.5.9.RELEASE'

    compile('org.springframework.security.oauth:spring-security-oauth2:2.1.1.RELEASE') {
        exclude group: 'org.codehaus.jackson'
    }

    compile 'org.springframework.session:spring-session-jdbc:2.0.1.RELEASE'
    compile 'org.springframework.session:spring-session-hazelcast:2.0.1.RELEASE' // mysteriously required by spring-session
    compile 'org.springframework.session:spring-session-data-redis:2.0.1.RELEASE' // mysteriously required by spring-session

    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:1.10.19'
}

jar {
    manifest {
        attributes 'Implementation-Version': project.version
    }
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = jar.getBaseName()
    dockerfile = file('src/main/docker/Dockerfile')
    tagVersion = "latest"
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

pitest {
    excludedClasses = [
            "com.emergentmud.core.EmergentMUD",
            "com.emergentmud.core.config.*"
    ]
    coverageThreshold = 70
    mutationThreshold = 70
    timestampedReports = false
}

dependencyCheck {
    suppressionFile "codequality/cve-suppressions.xml"
}

test.finalizedBy project.tasks.pitest, project.tasks.dependencyCheck, project.tasks.stats